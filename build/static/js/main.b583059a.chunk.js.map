{"version":3,"sources":["App.js","component/print/Print.js","component/number/Number.js","component/operator/Operator.js","index.js"],"names":["App","props","state","result","error","handleNumber","bind","handleOperator","className","this","map","item","index","val","key","arr","split","lastKey","length","console","log","join","setState","eval","e","Component","Text","Print","value","disabled","mark","Number","onClick","Operator","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"ylEAQMA,I,gYAEJ,aAAYC,GAAQ,IAAD,8LACjB,mBAAMA,IACDC,MAAQ,CACXC,OAAQ,IACRC,MAAO,4EAET,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,qLACpB,EAAKC,eAAiB,EAAKA,eAAeD,KAApB,qLAPL,E,kNAWT,IAAD,OAOP,OACE,kEAAKE,UAAU,WACb,2DAAC,sDAAD,CACEL,OAAQM,KAAKP,MAAMC,OACnBC,MAAOK,KAAKP,MAAME,QAEpB,kEAAKI,UAAU,oBATF,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,KAW1BE,KAAI,SAACC,EAAMC,GAClB,OAAO,2DAAC,6DAAD,CAAUC,IAAKF,EAAMG,IAAKF,EAC/BL,eAAgB,EAAKA,qBAM7B,kEAAKC,UAAU,eArBJ,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAuBnDE,KAAI,SAACC,EAAMC,GAChB,OAAO,2DAAC,yDAAD,CAAQC,IAAKF,EAAMG,IAAKF,EAC7BP,aAAc,EAAKA,sB,oDAOlBQ,KACb,IAAIV,OAASM,KAAKP,MAAMC,OAExB,GAAY,MAARU,IAOG,GAAY,MAARA,IAAJ,CAcL,IACE,IAAIE,IAAMZ,OAAOa,MAAM,IACnBC,QAAUF,IAAIA,IAAIG,OAAS,GAC/BC,QAAQC,IAAIL,KACZ,MAAOX,OACPe,QAAQC,IAAIhB,OAEd,GAAiB,MAAZa,SAA+B,MAAZA,SAA+B,MAAZA,SAA+B,MAAZA,SAA+B,MAAZA,QAO/E,OANAF,IAAIA,IAAIG,OAAS,GAAKL,IACtBM,QAAQC,IAAIL,KACZZ,OAASY,IAAIM,KAAK,SAClBZ,KAAKa,SAAS,CACZnB,OAAQA,SAMdM,KAAKa,SAAS,CACZnB,OAAQA,OAASU,WAhCjB,IACEJ,KAAKa,SAAS,CACZnB,OAAQoB,KAAKpB,QACbC,MAAO,+CAET,MAAOoB,GACPf,KAAKa,SAAS,CACZlB,MAAO,8CAdXK,KAAKa,SAAS,CACZnB,OAAQ,IACRC,MAAO,+E,mCAwCAS,GACX,IAAIV,EAASM,KAAKP,MAAMC,OACT,MAAXA,EAUkB,IAAlBA,EAAOe,OAITT,KAAKa,SAAS,CACZnB,OAAQA,EAASU,IAJnB,wDAAQT,MAAM,sEAVdK,KAAKa,SAAS,CACZnB,OAAQU,Q,KAjGEY,8CAqHHzB,2B,qGCzHP0B,G,WAAAA,MAWOC,IATD,SAAC1B,GACX,OACI,yBAAKO,UAAU,iBACX,uBAAOoB,MAAO3B,EAAME,OAAQ0B,UAAU,IACtC,kBAACH,EAAD,CAAMI,MAAI,GAAE7B,EAAMG,U,kFCSf2B,IAbA,SAAC,GAA2B,IAAzBlB,EAAwB,EAAxBA,IAAKR,EAAmB,EAAnBA,aACrB,OACE,yBAAKG,UAAU,eACb,uBAAQA,UAAU,aAChBwB,QAAS,WACP3B,EAAaQ,KAEdA,M,kFCEMoB,IATE,SAAC,GAA6B,IAA3BpB,EAA0B,EAA1BA,IAAKN,EAAqB,EAArBA,eAErB,OACI,uBAAQC,UAAU,aACdwB,QAAS,WAAQzB,EAAeM,KAClCA,K,oECXV,2DAKAqB,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,IAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.b583059a.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport Print from './component/print/Print'\nimport Number from './component/number/Number'\nimport Operator from './component/operator/Operator'\nimport { message } from 'antd';\n\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      result: '0',\n      error: '请输入数字或符号进行计算'\n    }\n    this.handleNumber = this.handleNumber.bind(this);\n    this.handleOperator = this.handleOperator.bind(this);\n\n  }\n\n  render() {\n\n    const number = [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \".\"]\n\n    const operator = [\"+\", \"-\", \"*\", \"/\", \"c\", \"=\"]\n\n\n    return (\n      <div className=\"content\">\n        <Print\n          result={this.state.result}\n          error={this.state.error}\n        />\n        <div className=\"operator-content\">\n          {\n            operator.map((item, index) => {\n              return <Operator val={item} key={index}\n                handleOperator={this.handleOperator}\n              />\n            })\n          }\n        </div>\n\n        <div className=\"num-content\">\n          {\n            number.map((item, index) => {\n              return <Number val={item} key={index}\n                handleNumber={this.handleNumber} />\n            })\n          }\n        </div>\n      </div>\n    )\n  }\n  handleOperator(val) {\n    var result = this.state.result\n    //归零\n    if (val === \"c\") {\n      this.setState({\n        result: \"0\",\n        error: '请输入数字或符号进行计算'\n      })\n      return\n      //计算\n    } else if (val === \"=\") {\n      try {\n        this.setState({\n          result: eval(result),\n          error: \"结果你算对了吗\"\n        })\n      } catch (e) {\n        this.setState({\n          error: \"算式格式错误\"\n        })\n      }\n      return\n    } else {\n      //符号重复输入\n      try {\n        var arr = result.split('')\n        var lastKey = arr[arr.length - 1]\n        console.log(arr)\n      } catch (error) {\n        console.log(error)\n      }\n      if ((lastKey === '+' || lastKey === '-' || lastKey === '*' || lastKey === '/' || lastKey === '.')) {\n        arr[arr.length - 1] = val\n        console.log(arr)\n        result = arr.join('')\n        this.setState({\n          result: result\n        })\n        return\n      }\n    }\n\n    this.setState({\n      result: result + val\n    })\n  }\n  handleNumber(val) {\n    var result = this.state.result\n    if (result === '0') {\n      this.setState({\n        result: val\n      })\n      return\n      //只能存在一个小数点\n    } else\n    //  if (result.indexOf(\".\") !== -1 && val === \".\") {\n    //   return\n    // } else \n    if (result.length === 9) {\n      message.error('超过本计算器的计算能力');\n      return\n    } else {\n      this.setState({\n        result: result + val\n      })\n    }\n  }\n\n}\n\nexport default App;\n","import React from 'react';\r\nimport './Print.css'\r\nimport { Input, Typography } from 'antd'\r\n\r\nconst { Text } = Typography;\r\n\r\nconst Print = (props) => {\r\n    return (\r\n        <div className=\"print-content\">\r\n            <Input value={props.result} disabled={true} />\r\n            <Text mark>{props.error}</Text>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Print\r\n\r\n","import React from 'react';\r\nimport './Number.css'\r\nimport { Button } from 'antd'\r\n\r\n\r\n\r\nconst Number = ({ val, handleNumber }) => {\r\n  return (\r\n    <div className=\"num-content\">\r\n      <Button className=\"btn-number\"\r\n        onClick={() => {\r\n          handleNumber(val)\r\n        }}>\r\n        {val}</Button>\r\n    </div>\r\n  );\r\n\r\n}\r\n\r\nexport default Number;\r\n","import React from 'react';\r\nimport './Operator.css'\r\nimport { Button } from 'antd'\r\n\r\n\r\n\r\nconst Operator = ({ val, handleOperator }) => {\r\n\r\n    return (\r\n        <Button className=\"btn-number\"\r\n            onClick={() => { handleOperator(val) }}\r\n        >{val}</Button>\r\n    );\r\n}\r\n\r\nexport default Operator;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}